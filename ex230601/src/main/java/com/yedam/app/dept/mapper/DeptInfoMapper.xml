<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.dept.mapper.DeptInfoMapper">
	<!-- 공통 -->
	<sql id="deptSelect">
		SELECT department_id, department_name, manager_id, location_id
		FROM departments
	</sql>
	<!-- mybatis를 사용할때 가급적이면 *(아스타)를 사용하지 않기로 한다. -->

	<!-- 전체조회 resultType은 명시해주는것이 좋음.-->
	<select id="selectAllDept" resultType="DeptInfoVO"> 
		<include refid="deptSelect"></include>
	</select>
	<!-- 단건 조회 -->
	<select id="selectOneDept" resultType="DeptInfoVO">
		<include refid="deptSelect"></include>
		WHERE department_id = #{departmentId}
		<!-- mapper와 인터페이스가 같이 bean을 생성해서 움직이기 때문에 고려해서 작업할것. -->
	</select>
	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="DeptInfoVO"> 
		<selectKey keyProperty="departmentId"
				   resultType="int"
				   order="BEFORE"> 
	<!-- 프라이머리키는 문자 숫자 혼합하는 경우가 많기 떄문에 숫자만 사용하는 시퀀스 보단 
			selectKey를 이용하는게 성능적인 면에서도 좋고 활용도도 높음.
			selectKey의 결과값을 java에서 바로 사용가능. 
		 	실행후 java에서 응용해서 사용하기 위해서.-->
		 SELECT NVL(MAX(department_id),0)+1
		 FROM departments
		</selectKey>
		INSERT INTO	departments(
					department_id, 
					department_name,
					manager_id,
					location_id)
		VALUES(
				#{departmentId},
				#{departmentName},
				#{managerId},
				#{locationId})
	</insert>
	<!-- 수정 -->
	<update id="updateDeptInfo" parameterType="DeptInfoVO">
		UPDATE departments
		<set>
			<!-- update할 대상이 들어가는 곳.
			하지만 수정하는 값이 어떤것인지 모르기 때문에 if절과 같이 사용.(choose도 사용가능)
			set과 if절을 같이 사용하면 자동적으로 ','를 자동으로 제거해주는 기능이 있다.
			if절 여러개 작성시.
			-->
			<if test="departmentName != null and !departmentName.equals('')">
			<!-- null값을 가질수 있기 때문에 null과 공백체크해서 제대로 작동이 가능하도록 작성! -->
				department_name = #{departmentName}
			</if>
			<if test="managerId > 0">
				,manager_id = #{managerId} 
			</if>
			<if test="locationId > 0"> <!-- int타입(기본타입)이기 때문에 null체크문이 없음.  -->
				, location_id = #{locationId}
			</if>
			<if test="locationId lte 0"> 
			<!-- 마이바티스가 비교 연산자 인식 못해서 <=를 lte로 사용 -->
				, location_id = 1000
			</if>
		</set> 
		where department_id = #{departmentId}
		<!-- set태그를 사용하지 않고 SET으로 사용하면 if문 안의 ','부분은 고려해서
			코드를 작성해야 함. (따로 처리하지 않기 때문에) -->
		<!-- 동적SQL문을 사용할때는 최소 한번은 실행이 될 수 있도록 문장을 작성하는것이 좋음. -->
	</update>
	<!-- 삭제 -->
	<delete id="deleteDeptInfo" parameterType="int">
		DELETE FROM departments
		WHERE department_id = #{departmentId}
	</delete>
	<!-- insert, update, delete 사실상 구분은 못하지만 개별태그가 존재하기때문에 구분 하는걸 추천. 
		selectKey는 delete지원하지 않음. -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>